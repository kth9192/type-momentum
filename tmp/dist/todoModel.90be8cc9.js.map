{"version":3,"sources":["../ts/model/todoModel.ts"],"names":[],"mappings":";;;;;;;;AAEA,IAAA,SAAA;AAAA;AAAA,YAAA;AAKE,WAAA,SAAA,GAAA;AACE,SAAK,YAAL,GAAoB,MAApB;AACA,SAAK,SAAL,GAAiB,KAAK,YAAL,EAAjB;AACD;;AAED,EAAA,SAAA,CAAA,SAAA,CAAA,mBAAA,GAAA,UAAoB,QAApB,EAAsC;AACpC,SAAK,iBAAL,GAAyB,QAAzB;AACD,GAFD;;AAIA,EAAA,SAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,KAAR,EAA8B;AAC5B,SAAK,iBAAL,CAAuB,KAAvB;AACA,IAAA,YAAY,CAAC,OAAb,CAAqB,KAAK,YAA1B,EAAwC,IAAI,CAAC,SAAL,CAAe,KAAK,SAApB,CAAxC;AACD,GAHD;;AAKA,EAAA,SAAA,CAAA,SAAA,CAAA,YAAA,GAAA,YAAA;AACE,QAAM,UAAU,GAAG,YAAY,CAAC,OAAb,CAAqB,KAAK,YAA1B,CAAnB;;AAEA,QAAI,UAAU,KAAK,IAAnB,EAAyB;AACvB,UAAM,SAAS,GAAG,IAAI,CAAC,KAAL,CAAW,UAAX,CAAlB;AACA,aAAO,SAAP;AACD;;AAED,WAAO,EAAP;AACD,GATD;;AAWA,EAAA,SAAA,CAAA,SAAA,CAAA,YAAA,GAAA,UAAa,OAAb,EAA4B;AAC1B,QAAM,IAAI,GAAG;AACX,MAAA,EAAE,EACA,KAAK,SAAL,CAAe,MAAf,GAAwB,CAAxB,GACI,KAAK,SAAL,CAAe,KAAK,SAAL,CAAe,MAAf,GAAwB,CAAvC,EAA0C,EAA1C,GAA+C,CADnD,GAEI,CAJK;AAKX,MAAA,IAAI,EAAE;AALK,KAAb;AAOA,SAAK,SAAL,CAAe,IAAf,CAAoB,IAApB;;AAEA,SAAK,OAAL,CAAa,KAAK,SAAlB;AACD,GAXD;;AAaA,EAAA,SAAA,CAAA,SAAA,CAAA,UAAA,GAAA,UAAW,EAAX,EAAqB;AACnB,SAAK,SAAL,GAAiB,KAAK,SAAL,CAAe,MAAf,CAAsB,UAAA,IAAA,EAAI;AACzC,MAAA,OAAO,CAAC,GAAR,CAAY,sCAAZ;AACA,MAAA,OAAO,CAAC,GAAR,CAAY,MAAZ,UAA2B,EAA3B;AACA,MAAA,OAAO,CAAC,GAAR,CAAY,sCAAZ;AACA,aAAO,IAAI,CAAC,EAAL,KAAY,EAAnB;AACD,KALgB,CAAjB;AAOA,IAAA,OAAO,CAAC,GAAR,CAAY,sCAAZ;AACA,IAAA,OAAO,CAAC,GAAR,CAAY,IAAZ,EAAkB,KAAK,SAAvB,EAAkC,EAAlC;AACA,IAAA,OAAO,CAAC,GAAR,CAAY,sCAAZ;;AACA,SAAK,OAAL,CAAa,KAAK,SAAlB;AACD,GAZD;;AAaF,SAAA,SAAA;AAxDA,CAAA,EAAA;;AA0DA,OAAA,CAAA,OAAA,GAAe,SAAf","file":"todoModel.90be8cc9.js","sourceRoot":"..\\src\\page","sourcesContent":["import { todoJSON } from \"../../interface/interface\";\r\n\r\nclass TodoModel {\r\n  private TODO_STORAGE: string;\r\n  public todoArray: Array<todoJSON>;\r\n  onTodoListChanged!: Function;\r\n\r\n  constructor() {\r\n    this.TODO_STORAGE = \"ToDo\";\r\n    this.todoArray = this.loadToDoList();\r\n  }\r\n\r\n  bindTodoListChanged(callback: Function) {\r\n    this.onTodoListChanged = callback;\r\n  }\r\n\r\n  _commit(todos: Array<todoJSON>) {\r\n    this.onTodoListChanged(todos);\r\n    localStorage.setItem(this.TODO_STORAGE, JSON.stringify(this.todoArray));\r\n  }\r\n\r\n  loadToDoList(): Array<todoJSON> {\r\n    const loadedToDo = localStorage.getItem(this.TODO_STORAGE);\r\n\r\n    if (loadedToDo !== null) {\r\n      const parseTodo = JSON.parse(loadedToDo);\r\n      return parseTodo;\r\n    }\r\n\r\n    return [];\r\n  }\r\n\r\n  saveToDoList(saveTxt: string) {\r\n    const todo = {\r\n      id:\r\n        this.todoArray.length > 0\r\n          ? this.todoArray[this.todoArray.length - 1].id + 1\r\n          : 1,\r\n      text: saveTxt\r\n    };\r\n    this.todoArray.push(todo);\r\n\r\n    this._commit(this.todoArray);\r\n  }\r\n\r\n  deleteToDo(id: number) {\r\n    this.todoArray = this.todoArray.filter(toDo => {\r\n      console.log(\"====================================\");\r\n      console.log(\"todo\", typeof id);\r\n      console.log(\"====================================\");\r\n      return toDo.id !== id;\r\n    });\r\n\r\n    console.log(\"====================================\");\r\n    console.log(\"삭제\", this.todoArray, id);\r\n    console.log(\"====================================\");\r\n    this._commit(this.todoArray);\r\n  }\r\n}\r\n\r\nexport default TodoModel;\r\n"]}