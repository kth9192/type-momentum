{"version":3,"sources":["src/ts/model/todoModel.ts"],"names":[],"mappings":";AA4DA,aAAA,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IA1DA,IAAA,EAAA,WAKE,SAAA,IACO,KAAA,aAAe,OACf,KAAA,UAAY,KAAK,eAiD1B,OA9CE,EAAA,UAAA,oBAAA,SAAoB,GACb,KAAA,kBAAoB,GAG3B,EAAA,UAAA,QAAA,SAAQ,GACD,KAAA,kBAAkB,GACvB,aAAa,QAAQ,KAAK,aAAc,KAAK,UAAU,KAAK,aAG9D,EAAA,UAAA,aAAA,WACQ,IAAA,EAAa,aAAa,QAAQ,KAAK,cAEzC,OAAe,OAAf,EACgB,KAAK,MAAM,GAIxB,IAGT,EAAA,UAAA,aAAA,SAAa,GACL,IAAA,EAAO,CACX,GACE,KAAK,UAAU,OAAS,EACpB,KAAK,UAAU,KAAK,UAAU,OAAS,GAAG,GAAK,EAC/C,EACN,KAAM,GAEH,KAAA,UAAU,KAAK,GAEf,KAAA,QAAQ,KAAK,YAGpB,EAAA,UAAA,WAAA,SAAW,GACJ,KAAA,UAAY,KAAK,UAAU,OAAO,SAAA,GAI9B,OAHP,QAAQ,IAAI,wCACZ,QAAQ,IAAI,OAAe,EAAA,IAC3B,QAAQ,IAAI,wCACL,EAAK,KAAO,IAGrB,QAAQ,IAAI,wCACZ,QAAQ,IAAI,KAAM,KAAK,UAAW,GAClC,QAAQ,IAAI,wCACP,KAAA,QAAQ,KAAK,YAEtB,EAxDA,GA0DA,QAAA,QAAe","file":"todoModel.3d34f290.js","sourceRoot":"..\\src","sourcesContent":["import { todoJSON } from \"../../interface/interface\";\r\n\r\nclass TodoModel {\r\n  private TODO_STORAGE: string;\r\n  public todoArray: Array<todoJSON>;\r\n  onTodoListChanged!: Function;\r\n\r\n  constructor() {\r\n    this.TODO_STORAGE = \"ToDo\";\r\n    this.todoArray = this.loadToDoList();\r\n  }\r\n\r\n  bindTodoListChanged(callback: Function) {\r\n    this.onTodoListChanged = callback;\r\n  }\r\n\r\n  _commit(todos: Array<todoJSON>) {\r\n    this.onTodoListChanged(todos);\r\n    localStorage.setItem(this.TODO_STORAGE, JSON.stringify(this.todoArray));\r\n  }\r\n\r\n  loadToDoList(): Array<todoJSON> {\r\n    const loadedToDo = localStorage.getItem(this.TODO_STORAGE);\r\n\r\n    if (loadedToDo !== null) {\r\n      const parseTodo = JSON.parse(loadedToDo);\r\n      return parseTodo;\r\n    }\r\n\r\n    return [];\r\n  }\r\n\r\n  saveToDoList(saveTxt: string) {\r\n    const todo = {\r\n      id:\r\n        this.todoArray.length > 0\r\n          ? this.todoArray[this.todoArray.length - 1].id + 1\r\n          : 1,\r\n      text: saveTxt\r\n    };\r\n    this.todoArray.push(todo);\r\n\r\n    this._commit(this.todoArray);\r\n  }\r\n\r\n  deleteToDo(id: number) {\r\n    this.todoArray = this.todoArray.filter(toDo => {\r\n      console.log(\"====================================\");\r\n      console.log(\"todo\", typeof id);\r\n      console.log(\"====================================\");\r\n      return toDo.id !== id;\r\n    });\r\n\r\n    console.log(\"====================================\");\r\n    console.log(\"삭제\", this.todoArray, id);\r\n    console.log(\"====================================\");\r\n    this._commit(this.todoArray);\r\n  }\r\n}\r\n\r\nexport default TodoModel;\r\n"]}